class TeleporterEffects : EventHandler
{

    Array<String> RedGateTextures;
    Array<String> GreenGateTextures;
    Array<String> BlueGateTextures;
    Array<String> WhiteGateTextures;
    Array<String> YellowGateTextures;
    Array<String> BlackGateTextures;
    Array<String> PurpleGateTextures;
    
    const NO_FOUNTAIN = 0;
    const TELEPORT_SPECIAL = 70;

    //check if our GateTextures array contains the texture we are looking for
    bool HasTexture(textureid texture, Array<String> textures)
    {
        let texture_name = TexMan.GetName(texture);
        for (int i = 0;i < textures.size();i++)
        {
            if (texture_name == textures[i])
                return true;
        }
        return false;
    }
    
    //Get the fountain for our sector, based on it's texture
    //This will return the health value that we need
    int GetFountainColour(textureid texture)
    {
        if (HasTexture(texture,WhiteGateTextures)) return 7;
        if (HasTexture(texture,BlackGateTextures)) return 6;
        if (HasTexture(texture,BlueGateTextures)) return 3;
        if (HasTexture(texture,YellowGateTextures)) return 4;
        if (HasTexture(texture,GreenGateTextures)) return 2;
        if (HasTexture(texture,RedGateTextures)) return 1;
        if (HasTexture(texture,PurpleGateTextures)) return 5;
        return NO_FOUNTAIN;
    }

    override void OnRegister()
    {
        CVar.GetCVAR("teleporter_flats_purple").GetString().Split(PurpleGateTextures, ",");
        CVar.GetCVAR("teleporter_flats_black").GetString().Split(BlackGateTextures, ",");
        CVar.GetCVAR("teleporter_flats_green").GetString().Split(GreenGateTextures, ",");
        CVar.GetCVAR("teleporter_flats_red").GetString().Split(RedGateTextures, ",");
        CVar.GetCVAR("teleporter_flats_blue").GetString().Split(BlueGateTextures, ",");
        CVar.GetCVAR("teleporter_flats_white").GetString().Split(WhiteGateTextures, ",");
        CVar.GetCVAR("teleporter_flats_yellow").GetString().Split(YellowGateTextures, ",");
    }
    
    //Determine if any line in our sector has the Teleport special
    bool HasTeleportSpecial(Sector s)
    {
        int lines = s.lines.size();
        for (int j = 0;j < lines;j++)
        {
            int special = s.lines[j].Special;
            if (special == TELEPORT_SPECIAL)
                return true;
        }
        return false;
    }

    override void WorldLoaded(WorldEvent e)
    {
        if (e.IsReopen)
            return;
            
        int sectors = level.sectors.size();
        
        for (int i = 0; i < sectors;i++)
        {
            Sector cursect = level.sectors[i];
            let floortex = cursect.GetTexture(0);
            let ceiltex = cursect.GetTexture(1);
            
            int fountainColour = GetFountainColour(floortex);
            bool hasSpecial = HasTeleportSpecial(cursect);
                      
            //skip this sector if it doesn't have a valid teleporter texture
            if (fountainColour == NO_FOUNTAIN || !hasSpecial)
                continue;
            
            //spawn fountain at sectors midpoint
            vector2 center = cursect.CenterSpot;
            let fountain = Actor.Spawn("GravityFountain",(center.x,center.y,0));
            
            //Set the fountain health. This determines it's colour. See here for more info
            //https://zdoom.org/wiki/Particles
            Console.Printf("Health value: "..fountainColour);
            fountain.Health = fountainColour;
        }
    }
}
