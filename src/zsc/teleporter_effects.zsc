class TeleporterEffects : EventHandler
{
    const TELEPORT_SPECIAL = 70;
    const EXIT_SPECIAL = 243;
    const EXIT_SPECIAL_SECRET = 244;
    
    const WALK_ACTIVATION = 1;
    const MONSTER_ACTIVATION = 4;
   
    override void WorldThingSpawned(WorldEvent e)
    {   
        if(e.Thing is "TeleportDest")
        {
            let pos = e.Thing.pos;
            let fountain = TeleporterEffect(Actor.Spawn("TeleporterEffect",(pos.x,pos.y,0)));
            fountain.SetDest(true);
            if (teleporter_debug)
                Console.Printf("Spawning fountain at "..pos.x..", "..pos.y.." (dest)");
        }
    }

    override void WorldLoaded(WorldEvent e)
    {   
        if (e.IsReopen)
            return;
            
        int sectors = level.sectors.size();
        
        for (int i = 0; i < sectors;i++)
        {           
            bool walk = false;
            bool monster = false;
            bool exit = false;
            bool usable = false;
            //int repeatable = 0;
            
            for (int j = 0; j < level.sectors[i].lines.size();j++)
            {
                int special = level.sectors[i].lines[j].Special;
                int activation = level.sectors[i].lines[j].Activation;
                //repeatable += level.sectors[i].lines[j].Flags & Line.ML_REPEAT_SPECIAL ? 1 : 0;
            
                walk = walk || activation == WALK_ACTIVATION;
                monster = monster || activation == MONSTER_ACTIVATION;
                exit = exit || special == EXIT_SPECIAL || special == EXIT_SPECIAL_SECRET;
                usable = usable || special == TELEPORT_SPECIAL;
                
                //Console.Printf("Repeatable: "..repeatable);
            }
            
            //we are likely in a sector that contains teleporters, but isn't a teleporter itself
            if ((monster && exit) || (walk && monster) || (usable && exit))
                continue;
            
            if ((walk || monster) && (usable || exit))
            {
                vector2 center = level.sectors[i].CenterSpot;
                let fountain = TeleporterEffect(Actor.Spawn("TeleporterEffect",(center.x,center.y,0)));
                fountain.SetExit(exit);
                fountain.SetMonster(monster);
                if (teleporter_debug)
                    Console.Printf("Spawning fountain at "..center.x..", "..center.y.." (exit: "..exit..", monster: "..monster..") in sector #"..level.sectors[i].Index());
            }
            
        }
    }
}
